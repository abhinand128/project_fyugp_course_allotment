# Generated by Django 4.2.11 on 2025-04-26 06:42

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('allotmentapp', '0008_alter_student_admission_year_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='department',
            name='isMajor',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='batch',
            name='year',
            field=models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^\\d{4}-\\d{4}$', 'Year must be in format YYYY-YYYY')]),
        ),
        migrations.AlterField(
            model_name='course',
            name='course_code',
            field=models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', 'Only alphanumeric characters are allowed.')]),
        ),
        migrations.AlterField(
            model_name='course',
            name='seat_limit',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='course',
            name='semester',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='hod',
            name='phone_number',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Only digits are allowed.')]),
        ),
        migrations.AlterField(
            model_name='student',
            name='admission_number',
            field=models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', 'Only alphanumeric characters are allowed.')]),
        ),
        migrations.AlterField(
            model_name='student',
            name='admission_year',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2025)]),
        ),
        migrations.AlterField(
            model_name='student',
            name='current_sem',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='student',
            name='first_sem_marks',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)]),
        ),
        migrations.AlterField(
            model_name='student',
            name='normalized_marks',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)]),
        ),
        migrations.AlterField(
            model_name='student',
            name='phone_number',
            field=models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Only digits are allowed.')]),
        ),
        migrations.AddConstraint(
            model_name='allocationsettings',
            constraint=models.UniqueConstraint(fields=('department',), name='unique_department_allocation'),
        ),
        migrations.AddConstraint(
            model_name='courseallotment',
            constraint=models.UniqueConstraint(fields=('student', 'paper_no'), name='unique_student_paper_allotment'),
        ),
        migrations.AddConstraint(
            model_name='coursepreference',
            constraint=models.UniqueConstraint(fields=('student', 'batch', 'paper_no'), name='unique_student_batch_paper'),
        ),
        migrations.AddConstraint(
            model_name='coursepreference',
            constraint=models.UniqueConstraint(fields=('student', 'preference_number', 'paper_no'), name='unique_student_preference_paper'),
        ),
    ]
